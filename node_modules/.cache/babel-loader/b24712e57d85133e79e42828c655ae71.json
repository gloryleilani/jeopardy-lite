{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/game-board-container.js\";\nimport React from 'react';\nimport GameBoardColumn from './game-board-column';\n\nconst GameBoardContainer = props => {\n  let categories = new Set();\n  console.log(\"props.questions:\", props.questions);\n\n  for (let key in props.questions) {\n    categories.add(props.questions[key].category);\n    console.log(\"item in questions:\", props.questions[key].category);\n    console.log(\"categories:\", categories);\n  }\n\n  ;\n  let categoryArray = Array.from(category);\n  console.log(categoryArray); // if (!(item.category in seen)) {\n  //     seen[item.category] = [];\n  //     seen[item.category].push(props.questions[item]);\n  //     console.log(\"seen:\", seen);\n  // }\n  // else {\n  //     seen[item.category].push(props.questions[item]);\n  // };\n\n  for (let i = 0; i < 7; i++) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Jeopardy Lite \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(GameBoardColumn, {\n                questions: props.questions.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(GameBoardColumn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(GameBoardColumn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(GameBoardColumn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(GameBoardColumn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(GameBoardColumn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GameBoardContainer;\nexport default GameBoardContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoardContainer\");","map":{"version":3,"sources":["/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/game-board-container.js"],"names":["React","GameBoardColumn","GameBoardContainer","props","categories","Set","console","log","questions","key","add","category","categoryArray","Array","from","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;;AAGA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAEhC,MAAIC,UAAU,GAAG,IAAIC,GAAJ,EAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,KAAK,CAACK,SAAtC;;AACA,OAAK,IAAIC,GAAT,IAAgBN,KAAK,CAACK,SAAtB,EAAiC;AAC7BJ,IAAAA,UAAU,CAACM,GAAX,CAAeP,KAAK,CAACK,SAAN,CAAgBC,GAAhB,EAAqBE,QAApC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,KAAK,CAACK,SAAN,CAAgBC,GAAhB,EAAqBE,QAAvD;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,UAA3B;AAEH;;AAAA;AACD,MAAIQ,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAWH,QAAX,CAApB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ,EAXgC,CAahC;AACI;AACA;AACA;AACA;AACA;AACA;AACA;;AAGJ,OAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB,CAEvB;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI;AAAA,+BACI;AAAA,iCACI;AAAA,oCACI;AAAA,qCACI,QAAC,eAAD;AAAiB,gBAAA,SAAS,EAAEZ,KAAK,CAACK,SAAN,CAAgBG;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAA,qCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAA,qCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAUI;AAAA,qCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAaI;AAAA,qCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAgBI;AAAA,qCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA1DD;;KAAMT,kB;AA4DN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport GameBoardColumn from './game-board-column';\n\n\nconst GameBoardContainer = props => {\n    \n    let categories = new Set()\n    console.log(\"props.questions:\", props.questions)\n    for (let key in props.questions) {\n        categories.add(props.questions[key].category)\n        console.log(\"item in questions:\", props.questions[key].category)\n        console.log(\"categories:\", categories)\n        \n    };\n    let categoryArray = Array.from(category)\n    console.log(categoryArray)\n    \n    // if (!(item.category in seen)) {\n        //     seen[item.category] = [];\n        //     seen[item.category].push(props.questions[item]);\n        //     console.log(\"seen:\", seen);\n        // }\n        // else {\n        //     seen[item.category].push(props.questions[item]);\n        // };\n\n    \n    for (let i=0; i<7; i++) {\n\n    }\n\n    return (\n        <div>\n            <h1> Jeopardy Lite </h1>\n            <div>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <GameBoardColumn questions={props.questions.category}/>\n                            </td>\n                            <td>\n                                <GameBoardColumn />\n                            </td>\n                            <td>\n                                <GameBoardColumn />\n                            </td>\n                            <td>\n                                <GameBoardColumn />\n                            </td>\n                            <td>\n                                <GameBoardColumn />\n                            </td>\n                            <td>\n                                <GameBoardColumn />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default GameBoardContainer"]},"metadata":{},"sourceType":"module"}