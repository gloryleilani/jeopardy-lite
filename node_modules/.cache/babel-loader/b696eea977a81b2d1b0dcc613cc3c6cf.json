{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/game-board-column.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport SmallCategoryBox from './small-category-box';\nimport GameSmallSingleItem from './small-point-box';\n\nconst GameBoardColumn = props => {\n  _s();\n\n  const [questionsInCategory, setQuestionsInCategory] = useState(null);\n  const categoryQuestionComponents = [];\n\n  const showQuestion = () => {\n    console.log(\"show question\");\n  };\n\n  useEffect(() => {\n    //if round===1, factor=100, if round==2, factor == 200, if round==3, wager.\n    for (let i = 1; i < 6; i++) {\n      //console.log(i);\n      const questionComponent = /*#__PURE__*/_jsxDEV(GameSmallSingleItem, {\n        points: i * 100,\n        handleClick: showQuestion\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 39\n      }, this);\n\n      categoryQuestionComponents.push(questionComponent);\n    }\n\n    ;\n    setQuestionsInCategory(categoryQuestionComponents);\n    console.log(\"state\", questionsInCategory);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SmallCategoryBox, {\n      categoryName: props.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), questionsInCategory]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameBoardColumn, \"YDMiL+hURW2RqnJ6rbiGWbYaHU4=\");\n\n_c = GameBoardColumn;\nexport default GameBoardColumn;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoardColumn\");","map":{"version":3,"sources":["/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/game-board-column.js"],"names":["React","useEffect","useState","SmallCategoryBox","GameSmallSingleItem","GameBoardColumn","props","questionsInCategory","setQuestionsInCategory","categoryQuestionComponents","showQuestion","console","log","i","questionComponent","push","category"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,mBAAP,MAAgC,mBAAhC;;AAGA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA;;AAE7B,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDN,QAAQ,CAAC,IAAD,CAA9D;AACA,QAAMO,0BAA0B,GAAE,EAAlC;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACA,SAAK,IAAIY,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AAEpB;AACA,YAAMC,iBAAiB,gBAAG,QAAC,mBAAD;AAEE,QAAA,MAAM,EAAED,CAAC,GAAC,GAFZ;AAGE,QAAA,WAAW,EAAEH;AAHf,SACOG,CADP;AAAA;AAAA;AAAA;AAAA,cAA1B;;AAMAJ,MAAAA,0BAA0B,CAACM,IAA3B,CAAgCD,iBAAhC;AACH;;AAAA;AACDN,IAAAA,sBAAsB,CAACC,0BAAD,CAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,mBAArB;AACH,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,YAAY,EAAED,KAAK,CAACU;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKT,mBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAnCD;;GAAMF,e;;KAAAA,e;AAqCN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SmallCategoryBox from './small-category-box';\nimport GameSmallSingleItem from './small-point-box';\n\n\nconst GameBoardColumn = props => {\n\n    const [questionsInCategory, setQuestionsInCategory] = useState(null); \n    const categoryQuestionComponents= [];\n\n    \n    const showQuestion = () => {\n        console.log(\"show question\")\n    };\n\n    useEffect(() => {\n        \n        //if round===1, factor=100, if round==2, factor == 200, if round==3, wager.\n        for (let i=1; i<6; i++) {\n            \n            //console.log(i);\n            const questionComponent = <GameSmallSingleItem\n                                        key={i}\n                                        points={i*100}\n                                        handleClick={showQuestion} \n                                        />\n\n            categoryQuestionComponents.push(questionComponent); \n        };\n        setQuestionsInCategory(categoryQuestionComponents);\n        console.log(\"state\", questionsInCategory)\n    }, []);\n\n    return (\n        <div>\n            <SmallCategoryBox categoryName={props.category}/>\n            {questionsInCategory}\n        </div>\n            \n    );\n}\n\nexport default GameBoardColumn"]},"metadata":{},"sourceType":"module"}