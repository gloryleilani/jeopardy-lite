{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/game-board-column.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport LargeSingleItemContainer from './Large-single-item-container';\nimport SmallCategoryBox from './small-category-box';\nimport SmallPointBox from './small-point-box';\n\nconst GameBoardColumn = props => {\n  _s();\n\n  const [pointsInCategory, setPointsInCategory] = useState(null);\n  const categoryPointComponents = [];\n  let seenQuestions = new Set();\n\n  for (let j in props.questions) {\n    console.log(\"item in props.qs\", props.questions[j]);\n    console.log(\"category in round1Qs\", props.questions[j].category);\n\n    if (props.category === props.questions[j].category) {\n      const question = props.questions[j].question;\n      console.log(\"question\", question);\n      seenQuestions.add(props.questions[j]);\n    }\n\n    ;\n  }\n\n  ;\n\n  const showQuestion = () => {\n    console.log(\"console show question:\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" beeeep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LargeSingleItemContainer, {\n        question: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  };\n\n  useEffect(() => {\n    //if round===1, factor=100, if round==2, factor == 200, if round==3, wager.\n    for (let i = 1; i < 6; i++) {\n      //console.log(i);\n      const pointComponent = /*#__PURE__*/_jsxDEV(SmallPointBox, {\n        points: i * 100,\n        handleClick: showQuestion\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 36\n      }, this);\n\n      categoryPointComponents.push(pointComponent);\n    }\n\n    ;\n    setPointsInCategory(categoryPointComponents);\n    console.log(\"state\", pointsInCategory);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SmallCategoryBox, {\n      categoryName: props.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), pointsInCategory]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameBoardColumn, \"fVcNVFo3X0f8j8W0uA5ZXOph6Eo=\");\n\n_c = GameBoardColumn;\nexport default GameBoardColumn;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoardColumn\");","map":{"version":3,"sources":["/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/game-board-column.js"],"names":["React","useEffect","useState","LargeSingleItemContainer","SmallCategoryBox","SmallPointBox","GameBoardColumn","props","pointsInCategory","setPointsInCategory","categoryPointComponents","seenQuestions","Set","j","questions","console","log","category","question","add","showQuestion","i","pointComponent","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,wBAAP,MAAqC,+BAArC;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;;AAGA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA;;AAE7B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAMQ,uBAAuB,GAAE,EAA/B;AAKA,MAAIC,aAAa,GAAG,IAAIC,GAAJ,EAApB;;AAGA,OAAK,IAAIC,CAAT,IAAcN,KAAK,CAACO,SAApB,EAA+B;AAG3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCT,KAAK,CAACO,SAAN,CAAgBD,CAAhB,CAAhC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCT,KAAK,CAACO,SAAN,CAAgBD,CAAhB,EAAmBI,QAAvD;;AAEA,QAAIV,KAAK,CAACU,QAAN,KAAmBV,KAAK,CAACO,SAAN,CAAgBD,CAAhB,EAAmBI,QAA1C,EAAoD;AAChD,YAAMC,QAAQ,GAAGX,KAAK,CAACO,SAAN,CAAgBD,CAAhB,EAAmBK,QAApC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,QAAxB;AAGAP,MAAAA,aAAa,CAACQ,GAAd,CAAkBZ,KAAK,CAACO,SAAN,CAAgBD,CAAhB,CAAlB;AACH;;AAAA;AAEJ;;AAAA;;AAMD,QAAMO,YAAY,GAAG,MAAM;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,wBACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA,QAAC,wBAAD;AAA0B,QAAA,QAAQ,EAAEE;AAApC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAOH,GATD;;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACA,SAAK,IAAIoB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACpB;AACA,YAAMC,cAAc,gBAAG,QAAC,aAAD;AAEK,QAAA,MAAM,EAAED,CAAC,GAAC,GAFf;AAGK,QAAA,WAAW,EAAED;AAHlB,SACUC,CADV;AAAA;AAAA;AAAA;AAAA,cAAvB;;AAMAX,MAAAA,uBAAuB,CAACa,IAAxB,CAA6BD,cAA7B;AACH;;AAAA;AACDb,IAAAA,mBAAmB,CAACC,uBAAD,CAAnB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,gBAArB;AACH,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,YAAY,EAAED,KAAK,CAACU;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKT,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAlED;;GAAMF,e;;KAAAA,e;AAoEN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport LargeSingleItemContainer from './Large-single-item-container';\nimport SmallCategoryBox from './small-category-box';\nimport SmallPointBox from './small-point-box';\n\n\nconst GameBoardColumn = props => {\n\n    const [pointsInCategory, setPointsInCategory] = useState(null); \n    const categoryPointComponents= [];\n\n    \n\n\n    let seenQuestions = new Set()\n    \n    \n    for (let j in props.questions) {\n        \n        \n        console.log(\"item in props.qs\", props.questions[j]);\n        console.log(\"category in round1Qs\", props.questions[j].category);\n        \n        if (props.category === props.questions[j].category) {\n            const question = props.questions[j].question;\n            console.log(\"question\", question) \n            \n            \n            seenQuestions.add(props.questions[j]);\n        };\n        \n    };   \n    \n    \n    \n\n\n    const showQuestion = () => {\n        console.log(\"console show question:\")\n        return (\n        <div>\n            <p> beeeep</p>\n        <LargeSingleItemContainer question={question}/>\n        </div>\n        )\n        \n    };\n\n    useEffect(() => {\n        \n        //if round===1, factor=100, if round==2, factor == 200, if round==3, wager.\n        for (let i=1; i<6; i++) {\n            //console.log(i);\n            const pointComponent = <SmallPointBox\n                                        key={i}\n                                        points={i*100}\n                                        handleClick={showQuestion} \n                                        />\n\n            categoryPointComponents.push(pointComponent); \n        };\n        setPointsInCategory(categoryPointComponents);\n        console.log(\"state\", pointsInCategory)\n    }, []);\n\n    return (\n        <div>\n            <SmallCategoryBox categoryName={props.category}/>\n            {pointsInCategory}\n            \n        </div>\n    );\n}\n\nexport default GameBoardColumn"]},"metadata":{},"sourceType":"module"}