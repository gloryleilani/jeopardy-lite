{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/game-board-container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport GameBoardColumn from './game-board-column';\n\nconst GameBoardContainer = props => {\n  _s();\n\n  const [gameBoardColumns, setGameBoardColumns] = useState(null);\n  let categories = new Set(); //console.log(\"props.questions:\", props.questions)\n\n  for (let item in props.questions) {\n    categories.add(props.questions[item].category); //console.log(\"item in questions:\", props.questions[key].category)\n  }\n\n  ; //Convert set into array\n\n  let categoryArray = Array.from(categories);\n  console.log(\"category array:\", categoryArray); //Set categories for this game\n\n  const round1Categories = categoryArray.slice(0, 6);\n  const round2Categories = categoryArray.slice(6, 12);\n  const round3Categories = categoryArray.slice(12);\n  const gameBoardColumnComponents = []; // const categories = null; \n  // if (round===1) {\n  //     categories = round1Categories;\n  // }\n  // if (round == 2) {\n  //     categories = round2Categories;\n  // }\n\n  useEffect(() => {\n    for (let i = 0; i < 6; i++) {\n      const gameBoardComponent = /*#__PURE__*/_jsxDEV(GameBoardColumn, {\n        category: round1Categories[i],\n        questions: props.questions\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 40\n      }, this);\n\n      gameBoardColumnComponents.push(gameBoardComponent);\n    }\n\n    ;\n    setGameBoardColumns(gameBoardColumnComponents); //console.log(\"column components state\", gameBoardColumns)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Jeopardy Lite \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: gameBoardColumns && gameBoardColumns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: column\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameBoardContainer, \"kS6gklT45LV1tK0tGczTsCz/Peo=\");\n\n_c = GameBoardContainer;\nexport default GameBoardContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoardContainer\");","map":{"version":3,"sources":["/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/game-board-container.js"],"names":["React","useEffect","useState","GameBoardColumn","GameBoardContainer","props","gameBoardColumns","setGameBoardColumns","categories","Set","item","questions","add","category","categoryArray","Array","from","console","log","round1Categories","slice","round2Categories","round3Categories","gameBoardColumnComponents","i","gameBoardComponent","push","map","column"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,qBAA5B;;AAGA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAAA;;AAEhC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,IAAD,CAAxD;AAEA,MAAIM,UAAU,GAAG,IAAIC,GAAJ,EAAjB,CAJgC,CAKhC;;AACA,OAAK,IAAIC,IAAT,IAAiBL,KAAK,CAACM,SAAvB,EAAkC;AAC9BH,IAAAA,UAAU,CAACI,GAAX,CAAeP,KAAK,CAACM,SAAN,CAAgBD,IAAhB,EAAsBG,QAArC,EAD8B,CAE9B;AACH;;AAAA,GAT+B,CAWhC;;AACA,MAAIC,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAWR,UAAX,CAApB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,aAA/B,EAbgC,CAehC;;AACA,QAAMK,gBAAgB,GAAGL,aAAa,CAACM,KAAd,CAAoB,CAApB,EAAsB,CAAtB,CAAzB;AACA,QAAMC,gBAAgB,GAAGP,aAAa,CAACM,KAAd,CAAoB,CAApB,EAAsB,EAAtB,CAAzB;AACA,QAAME,gBAAgB,GAAGR,aAAa,CAACM,KAAd,CAAoB,EAApB,CAAzB;AAEA,QAAMG,yBAAyB,GAAG,EAAlC,CApBgC,CAqBhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAK,IAAIuB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACpB,YAAMC,kBAAkB,gBAAG,QAAC,eAAD;AAEC,QAAA,QAAQ,EAAEN,gBAAgB,CAACK,CAAD,CAF3B;AAGC,QAAA,SAAS,EAAEnB,KAAK,CAACM;AAHlB,SACQa,CADR;AAAA;AAAA;AAAA;AAAA,cAA3B;;AAKAD,MAAAA,yBAAyB,CAACG,IAA1B,CAA+BD,kBAA/B;AACH;;AAAA;AACDlB,IAAAA,mBAAmB,CAACgB,yBAAD,CAAnB,CATY,CAUZ;AACH,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI;AAAA,+BACI;AAAA,iCACI;AAAA,sBACKjB,gBAAgB,IAAIA,gBAAgB,CAACqB,GAAjB,CAAsBC,MAAD,iBACtC;AAAA,wBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,oBADiB;AADzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA1DD;;GAAMxB,kB;;KAAAA,kB;AA4DN,eAAeA,kBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport GameBoardColumn from './game-board-column';\n\n\nconst GameBoardContainer = props => {\n    \n    const [gameBoardColumns, setGameBoardColumns] = useState(null);\n    \n    let categories = new Set()\n    //console.log(\"props.questions:\", props.questions)\n    for (let item in props.questions) {\n        categories.add(props.questions[item].category)\n        //console.log(\"item in questions:\", props.questions[key].category)\n    };\n\n    //Convert set into array\n    let categoryArray = Array.from(categories)\n    console.log(\"category array:\", categoryArray)\n\n    //Set categories for this game\n    const round1Categories = categoryArray.slice(0,6);\n    const round2Categories = categoryArray.slice(6,12);\n    const round3Categories = categoryArray.slice(12,)\n    \n    const gameBoardColumnComponents = [] \n    // const categories = null; \n    // if (round===1) {\n    //     categories = round1Categories;\n    // }\n    // if (round == 2) {\n    //     categories = round2Categories;\n    // }\n    \n    useEffect(() => {\n        for (let i=0; i<6; i++) { \n            const gameBoardComponent = <GameBoardColumn \n                                        key = {i} \n                                        category={round1Categories[i]} \n                                        questions={props.questions} \n                                        />\n            gameBoardColumnComponents.push(gameBoardComponent);                                    \n        };\n        setGameBoardColumns(gameBoardColumnComponents);\n        //console.log(\"column components state\", gameBoardColumns)\n    }, []);        \n\n    return (\n        <div>\n            <h1> Jeopardy Lite </h1>\n            <div>\n                <table>\n                    <tbody>\n                        <tr>\n                            {gameBoardColumns && gameBoardColumns.map((column) => (\n                                <td>{column}</td>\n                            ))}\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default GameBoardContainer"]},"metadata":{},"sourceType":"module"}