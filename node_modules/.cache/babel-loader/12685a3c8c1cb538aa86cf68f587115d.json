{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/large-single-item-container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport AnswerChoicesPanel from './answer-choices-panel';\nimport MainButton from './main-button'; //Child of App (Router switch to /question)\n\nconst LargeSingleItemContainer = props => {\n  _s();\n\n  //Function to shuffle questions in categories and also answer choices per question\n  const shuffle = lst => {\n    for (let i = lst.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = lst[i];\n      lst[i] = lst[j];\n      lst[j] = temp;\n    }\n\n    ;\n  };\n\n  const [showMultipleChoice, setShowMultipleChoice] = useState();\n  let location = useLocation();\n  let questionObject = location.state.questionObject;\n  console.log(\"ques\", location.state.question); // console.log(\"ques\", location.state.question.question);\n  // console.log(\"ques\", location.state.question.answers);\n  //Add correct answer to list of answer choices\n\n  let answerChoices = []; //for (const item of questionList) {\n\n  answerChoices = questionObject.incorrect_answers;\n  console.log(\"questionObject\"); // answerChoices = questionObject.incorrect_answers;\n  // answerChoices.push(questionObject.correct_answer);\n  //console.log(\"item:\", item);\n  //console.log(\"ans pre shuf:\", answerChoices);\n\n  shuffle(answerChoices); //console.log(\"ans post shuf:\", answerChoices);\n  //}\n\n  const showAnswerChoices = answerChoices => {\n    console.log(\"howdy\");\n    setShowMultipleChoice(true);\n  }; // const {question} = useParams();\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: location.state.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), showMultipleChoice ? /*#__PURE__*/_jsxDEV(AnswerChoicesPanel, {\n      questionObject: questionObject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(MainButton, {\n      label: \"Answer\",\n      handleClick: showAnswerChoices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 91\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LargeSingleItemContainer, \"GknEH5NbUW3P2Mg/HnxAA5f2EO8=\", false, function () {\n  return [useLocation];\n});\n\n_c = LargeSingleItemContainer;\nexport default LargeSingleItemContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LargeSingleItemContainer\");","map":{"version":3,"sources":["/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/large-single-item-container.js"],"names":["React","useState","useLocation","AnswerChoicesPanel","MainButton","LargeSingleItemContainer","props","shuffle","lst","i","length","j","Math","floor","random","temp","showMultipleChoice","setShowMultipleChoice","location","questionObject","state","console","log","question","answerChoices","incorrect_answers","showAnswerChoices"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAGA;;AACA,MAAMC,wBAAwB,GAAGC,KAAK,IAAI;AAAA;;AAEtC;AACA,QAAMC,OAAO,GAAIC,GAAD,IAAS;AACrB,SAAK,IAAIC,CAAC,GAAED,GAAG,CAACE,MAAJ,GAAa,CAAzB,EAA4BD,CAAC,GAAC,CAA9B,EAAiCA,CAAC,EAAlC,EAAuC;AACnC,YAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,CAA3B,CAAV;AACA,YAAMM,IAAI,GAAGP,GAAG,CAACC,CAAD,CAAhB;AACAD,MAAAA,GAAG,CAACC,CAAD,CAAH,GAASD,GAAG,CAACG,CAAD,CAAZ;AACAH,MAAAA,GAAG,CAACG,CAAD,CAAH,GAASI,IAAT;AACH;;AAAA;AACJ,GAPD;;AASA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8ChB,QAAQ,EAA5D;AACA,MAAIiB,QAAQ,GAAGhB,WAAW,EAA1B;AACA,MAAIiB,cAAc,GAAGD,QAAQ,CAACE,KAAT,CAAeD,cAApC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,QAAQ,CAACE,KAAT,CAAeG,QAAnC,EAfsC,CAgBtC;AACA;AAEA;;AACA,MAAIC,aAAa,GAAG,EAApB,CApBsC,CAsBtC;;AACAA,EAAAA,aAAa,GAAGL,cAAc,CAACM,iBAA/B;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAxBsC,CAyBtC;AACA;AACA;AACA;;AACAf,EAAAA,OAAO,CAACiB,aAAD,CAAP,CA7BsC,CA8BtC;AACA;;AAEA,QAAME,iBAAiB,GAAIF,aAAD,IAAmB;AACzCH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEAL,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH,GAJD,CAjCsC,CAsCtC;;;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIC,QAAQ,CAACE,KAAT,CAAeG;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKP,kBAAkB,gBAAE,QAAC,kBAAD;AAAoB,MAAA,cAAc,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA,YAAF,gBAA2D,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,WAAW,EAAEO;AAAxC;AAAA;AAAA;AAAA;AAAA,YAHlF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA9CD;;GAAMrB,wB;UAaaH,W;;;KAbbG,wB;AAgDN,eAAeA,wBAAf","sourcesContent":["import React, { useState } from 'react';\nimport {useLocation} from 'react-router-dom';\nimport AnswerChoicesPanel from './answer-choices-panel';\nimport MainButton from './main-button';\n\n\n//Child of App (Router switch to /question)\nconst LargeSingleItemContainer = props => {\n\n    //Function to shuffle questions in categories and also answer choices per question\n    const shuffle = (lst) => {\n        for (let i= lst.length - 1; i>0; i --) {\n            const j = Math.floor(Math.random() * i);\n            const temp = lst[i];\n            lst[i] = lst[j];\n            lst[j] = temp;\n        };\n    };\n\n    const [showMultipleChoice, setShowMultipleChoice] = useState();\n    let location = useLocation();\n    let questionObject = location.state.questionObject;\n    console.log(\"ques\", location.state.question);\n    // console.log(\"ques\", location.state.question.question);\n    // console.log(\"ques\", location.state.question.answers);\n\n    //Add correct answer to list of answer choices\n    let answerChoices = [];\n    \n    //for (const item of questionList) {\n    answerChoices = questionObject.incorrect_answers;\n    console.log(\"questionObject\");\n    // answerChoices = questionObject.incorrect_answers;\n    // answerChoices.push(questionObject.correct_answer);\n    //console.log(\"item:\", item);\n    //console.log(\"ans pre shuf:\", answerChoices);\n    shuffle(answerChoices);\n    //console.log(\"ans post shuf:\", answerChoices);\n    //}\n\n    const showAnswerChoices = (answerChoices) => {\n        console.log(\"howdy\");\n\n        setShowMultipleChoice(true);\n    }\n    // const {question} = useParams();\n    return (\n        <div>\n            <p>Hi</p>\n            <p>{location.state.question}</p>\n            {showMultipleChoice? <AnswerChoicesPanel questionObject={questionObject} /> : <MainButton label=\"Answer\" handleClick={showAnswerChoices} />}\n        </div>\n    );\n}\n\nexport default LargeSingleItemContainer"]},"metadata":{},"sourceType":"module"}