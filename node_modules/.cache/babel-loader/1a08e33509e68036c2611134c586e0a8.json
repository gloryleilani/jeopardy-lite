{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gloryleilaniwilliams/src/jeopardy-lite/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport LandingPage from \"./components/landing-page\";\nimport GameBoardContainer from \"./components/game-board-container\";\nimport questionList from \"./questions.json\";\n\nfunction App() {\n  _s();\n\n  const [newView, setNewView] = useState(true);\n  const [round, setRound] = useState(1);\n  const [playerScore, setPlayerScore] = useState(0);\n  const [questions, setQuestions] = useState(null); // roundTimer = 600; //Seconds, counting down\n\n  const playGame = () => {\n    console.log(\"new view pre:\", newView);\n    setNewView(false);\n    console.log(\"new view post:\", newView);\n  };\n\n  const answerChoices = [];\n\n  for (const item of questionList) {\n    const answerChoices = item.incorrect_answers;\n    answerChoices.push(item.correct_answer);\n    console.log(\"item:\", item);\n    console.log(\"ans pre shuf:\", answerChoices);\n    shuffle(answerChoices);\n    console.log(\"ans post shuf:\", answerChoices);\n  }\n\n  const shuffle = lst => {\n    for (let i = lst.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = lst[i];\n      lst[i] = lst[j];\n      lst[j] = temp;\n    }\n  };\n\n  shuffle(questionList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: newView ? /*#__PURE__*/_jsxDEV(LandingPage, {\n      play: playGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(GameBoardContainer, {\n      questions: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xuFQbpfpwE+ZxU9aWfMUtCJd/t0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gloryleilaniwilliams/src/jeopardy-lite/src/App.js"],"names":["React","useEffect","useState","LandingPage","GameBoardContainer","questionList","App","newView","setNewView","round","setRound","playerScore","setPlayerScore","questions","setQuestions","playGame","console","log","answerChoices","item","incorrect_answers","push","correct_answer","shuffle","lst","i","length","j","Math","floor","random","temp"],"mappings":";;;;;AAAA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C,CALa,CAMb;;AAIA,QAAMa,QAAQ,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BV,OAA7B;AACAC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BV,OAA9B;AACC,GAJH;;AAMA,QAAMW,aAAa,GAAG,EAAtB;;AACA,OAAK,MAAMC,IAAX,IAAmBd,YAAnB,EAAiC;AAC/B,UAAMa,aAAa,GAAGC,IAAI,CAACC,iBAA3B;AACAF,IAAAA,aAAa,CAACG,IAAd,CAAmBF,IAAI,CAACG,cAAxB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,IAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,aAA7B;AACAK,IAAAA,OAAO,CAACL,aAAD,CAAP;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,aAA9B;AACD;;AAID,QAAMK,OAAO,GAAIC,GAAD,IAAS;AAEvB,SAAK,IAAIC,CAAC,GAAED,GAAG,CAACE,MAAJ,GAAa,CAAzB,EAA4BD,CAAC,GAAC,CAA9B,EAAiCA,CAAC,EAAlC,EAAuC;AACrC,YAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,CAA3B,CAAV;AACA,YAAMM,IAAI,GAAGP,GAAG,CAACC,CAAD,CAAhB;AACAD,MAAAA,GAAG,CAACC,CAAD,CAAH,GAASD,GAAG,CAACG,CAAD,CAAZ;AACAH,MAAAA,GAAG,CAACG,CAAD,CAAH,GAASI,IAAT;AACD;AACJ,GARC;;AASFR,EAAAA,OAAO,CAAClB,YAAD,CAAP;AAOE,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGE,OAAO,gBAAE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEQ;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAF,gBAAoC,QAAC,kBAAD;AAAoB,MAAA,SAAS,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA;AAD9C;AAAA;AAAA;AAAA;AAAA,UAFF;AAOD;;GAnDQP,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport LandingPage from \"./components/landing-page\";\nimport GameBoardContainer from \"./components/game-board-container\";\nimport questionList from \"./questions.json\";\n\n\nfunction App() {\n  \n  const [newView, setNewView] = useState(true);\n  const [round, setRound] = useState(1);\n  const [playerScore, setPlayerScore] = useState(0);\n  const [questions, setQuestions] = useState(null);\n  // roundTimer = 600; //Seconds, counting down\n\n  \n  \n  const playGame = () => {\n    console.log(\"new view pre:\", newView)\n    setNewView(false);\n    console.log(\"new view post:\", newView)\n    };\n\n  const answerChoices = [];\n  for (const item of questionList) {\n    const answerChoices = item.incorrect_answers;\n    answerChoices.push(item.correct_answer);\n    console.log(\"item:\", item);\n    console.log(\"ans pre shuf:\", answerChoices);\n    shuffle(answerChoices);\n    console.log(\"ans post shuf:\", answerChoices);\n  }\n  \n  \n\n  const shuffle = (lst) => {\n    \n    for (let i= lst.length - 1; i>0; i --) {\n      const j = Math.floor(Math.random() * i);\n      const temp = lst[i];\n      lst[i] = lst[j];\n      lst[j] = temp;\n    }\n}\nshuffle(questionList);\n\n\n\n  \n\n\n  return (\n    \n    <div className=\"App\">\n      {newView? <LandingPage play={playGame} /> : <GameBoardContainer questions={questions}/>}\n      \n    </div>\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}