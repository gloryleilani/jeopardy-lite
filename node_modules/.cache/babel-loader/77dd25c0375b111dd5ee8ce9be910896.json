{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/game-board-column.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, Route, BrowserRouter as Router } from 'react-router-dom'; //import LargeSingleItemContainer from './Large-single-item-container';\n\nimport SmallCategoryBox from './small-category-box';\nimport SmallPointBox from './small-point-box'; //Child of GameBoardContainer\n\nconst GameBoardColumn = props => {\n  _s();\n\n  const [pointsInCategory, setPointsInCategory] = useState(null);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const categoryPointComponents = [];\n  let seenQuestions = new Set(); //console.log(\"props.questions\", props.questions)\n\n  console.log(\"question item\", selectedQuestion);\n  const history = useHistory();\n\n  const showQuestion = e => {\n    e.preventDefault(); //Push to LargeSingleItemContainer\n\n    for (let j in props.questions) {\n      console.log(\"item in props.qs\", props.questions[j]);\n      console.log(\"category in round1Qs\", props.questions[j].category);\n      console.log(\"props.category\", props.category);\n      console.log(\"question in props.q\", props.questions[j].question);\n      console.log(\"seen doesn't have item\", !seenQuestions.has(props.questions[j]));\n\n      if (props.category === props.questions[j].category && !seenQuestions.has(props.questions[j])) {\n        setSelectedQuestion(props.questions[j]);\n        seenQuestions.add(props.questions[j]);\n        console.log(\"seenQs\", seenQuestions);\n        console.log(\"seen doesn't have item\", !seenQuestions.has(props.questions[j]));\n        break;\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const push = () => {\n    history.push({\n      pathname: `/question`,\n      questionObj: \"selectedQues\",\n      questionSt: selectedQuestion\n    });\n  };\n\n  if (selectedQuestion !== null) {\n    push();\n  }\n\n  ;\n  useEffect(() => {\n    //if round===1, factor=100, if round==2, factor == 200, if round==3, wager.\n    for (let i = 1; i < 6; i++) {\n      //console.log(i);\n      const pointComponent = /*#__PURE__*/_jsxDEV(SmallPointBox, {\n        points: i * 100,\n        handleClick: showQuestion\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }, this);\n\n      categoryPointComponents.push(pointComponent);\n    }\n\n    ;\n    setPointsInCategory(categoryPointComponents);\n  }, []);\n  console.log(\"state\", pointsInCategory);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SmallCategoryBox, {\n      categoryName: props.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), pointsInCategory]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameBoardColumn, \"pk9Jr2Z5mJXGfAGTGjPsLaVy2L8=\", false, function () {\n  return [useHistory];\n});\n\n_c = GameBoardColumn;\nexport default GameBoardColumn;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoardColumn\");","map":{"version":3,"sources":["/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/game-board-column.js"],"names":["React","useEffect","useState","useHistory","Route","BrowserRouter","Router","SmallCategoryBox","SmallPointBox","GameBoardColumn","props","pointsInCategory","setPointsInCategory","selectedQuestion","setSelectedQuestion","categoryPointComponents","seenQuestions","Set","console","log","history","showQuestion","e","preventDefault","j","questions","category","question","has","add","push","pathname","questionObj","questionSt","i","pointComponent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory, Route, BrowserRouter as Router } from 'react-router-dom';\n//import LargeSingleItemContainer from './Large-single-item-container';\nimport SmallCategoryBox from './small-category-box';\nimport SmallPointBox from './small-point-box';\n\n//Child of GameBoardContainer\nconst GameBoardColumn = props => {\n\n    const [pointsInCategory, setPointsInCategory] = useState(null); \n    const [selectedQuestion, setSelectedQuestion] = useState(null);\n    const categoryPointComponents= [];\n    \n    \n    let seenQuestions = new Set()\n    //console.log(\"props.questions\", props.questions)\n\n    console.log(\"question item\", selectedQuestion); \n    const history = useHistory();\n    \n    const showQuestion = (e) => {\n        e.preventDefault();\n        //Push to LargeSingleItemContainer\n        \n        for (let j in props.questions) {\n            \n            console.log(\"item in props.qs\", props.questions[j]);\n            console.log(\"category in round1Qs\", props.questions[j].category);\n            console.log(\"props.category\", props.category);\n            console.log(\"question in props.q\", props.questions[j].question);\n            console.log(\"seen doesn't have item\", !seenQuestions.has(props.questions[j]));\n            if (props.category === props.questions[j].category && !seenQuestions.has(props.questions[j])) {\n                setSelectedQuestion(props.questions[j]);\n                \n                seenQuestions.add(props.questions[j]);\n                console.log(\"seenQs\", seenQuestions)\n                console.log(\"seen doesn't have item\", !seenQuestions.has(props.questions[j]));\n                break;\n            };\n        };   \n          \n    };\n\n    const push = () => {\n        history.push({\n            pathname:`/question`,\n            questionObj: \"selectedQues\",\n            questionSt: selectedQuestion\n        }); \n    };\n\n    \n    if (selectedQuestion !== null) {\n        push();\n    };\n   \n\n    useEffect(() => {\n        //if round===1, factor=100, if round==2, factor == 200, if round==3, wager.\n        for (let i=1; i<6; i++) {\n            //console.log(i);\n            const pointComponent = <SmallPointBox\n                                        key={i}\n                                        points={i*100}\n                                        handleClick={showQuestion} \n                                        />\n\n            categoryPointComponents.push(pointComponent); \n        };\n        setPointsInCategory(categoryPointComponents);\n        \n    }, []);\n    console.log(\"state\", pointsInCategory)\n\n    return (\n        <div>\n            <SmallCategoryBox categoryName={props.category}/>\n            {pointsInCategory}           \n        </div>\n    );\n}\n\nexport default GameBoardColumn"]},"metadata":{},"sourceType":"module"}