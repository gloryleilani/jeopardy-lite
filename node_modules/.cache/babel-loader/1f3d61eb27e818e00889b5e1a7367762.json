{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/large-single-item-container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport AnswerChoicesPanel from './answer-choices-panel';\nimport MainButton from './main-button'; //Child of App (Router switch to /question)\n\nconst LargeSingleItemContainer = props => {\n  _s();\n\n  //Function to shuffle questions in categories and also answer choices per question\n  const shuffle = lst => {\n    for (let i = lst.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = lst[i];\n      lst[i] = lst[j];\n      lst[j] = temp;\n    }\n\n    ;\n  };\n\n  const [showMultipleChoice, setShowMultipleChoice] = useState(false); //Pushed from GameBoardColumn\n\n  let location = useLocation();\n  console.log(\"quesOb\", location.questionObject); //Add correct answer to list of answer choices\n\n  const IncorrectAnswerChoices = location.questionObject.incorrect_answers;\n  const CorrectAnswerChoice = location.questionObject.correct_answer;\n  let answerChoices = [];\n  answerChoices = IncorrectAnswerChoices;\n  console.log(\"answer choices before push\", answerChoices);\n  answerChoices.push(CorrectAnswerChoice);\n  console.log(\"answer choices after push\", answerChoices); //console.log(\"item:\", item);\n  // console.log(\"ans pre shuf:\", answerChoices);\n  // shuffle(answerChoices);\n  //console.log(\"ans post shuf:\", answerChoices);\n  //}\n\n  const showAnswerChoices = answerChoices => {\n    console.log(\"howdy\");\n    setShowMultipleChoice(true);\n  }; // const {question} = useParams();\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: answerChoices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), showMultipleChoice ? /*#__PURE__*/_jsxDEV(AnswerChoicesPanel, {\n      questionObject: answerChoices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(MainButton, {\n      label: \"Answer\",\n      handleClick: showAnswerChoices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 90\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LargeSingleItemContainer, \"F3mUpNvzf2xZQ6Qwo4AK/N5ucLQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = LargeSingleItemContainer;\nexport default LargeSingleItemContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LargeSingleItemContainer\");","map":{"version":3,"sources":["/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/large-single-item-container.js"],"names":["React","useState","useLocation","AnswerChoicesPanel","MainButton","LargeSingleItemContainer","props","shuffle","lst","i","length","j","Math","floor","random","temp","showMultipleChoice","setShowMultipleChoice","location","console","log","questionObject","IncorrectAnswerChoices","incorrect_answers","CorrectAnswerChoice","correct_answer","answerChoices","push","showAnswerChoices"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAGA;;AACA,MAAMC,wBAAwB,GAAGC,KAAK,IAAI;AAAA;;AAEtC;AACA,QAAMC,OAAO,GAAIC,GAAD,IAAS;AACrB,SAAK,IAAIC,CAAC,GAAED,GAAG,CAACE,MAAJ,GAAa,CAAzB,EAA4BD,CAAC,GAAC,CAA9B,EAAiCA,CAAC,EAAlC,EAAuC;AACnC,YAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,CAA3B,CAAV;AACA,YAAMM,IAAI,GAAGP,GAAG,CAACC,CAAD,CAAhB;AACAD,MAAAA,GAAG,CAACC,CAAD,CAAH,GAASD,GAAG,CAACG,CAAD,CAAZ;AACAH,MAAAA,GAAG,CAACG,CAAD,CAAH,GAASI,IAAT;AACH;;AAAA;AACJ,GAPD;;AASA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8ChB,QAAQ,CAAC,KAAD,CAA5D,CAZsC,CActC;;AACA,MAAIiB,QAAQ,GAAGhB,WAAW,EAA1B;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAQ,CAACG,cAA/B,EAhBsC,CAkBtC;;AACA,QAAMC,sBAAsB,GAAGJ,QAAQ,CAACG,cAAT,CAAwBE,iBAAvD;AACA,QAAMC,mBAAmB,GAAGN,QAAQ,CAACG,cAAT,CAAwBI,cAApD;AACA,MAAIC,aAAa,GAAG,EAApB;AACAA,EAAAA,aAAa,GAAGJ,sBAAhB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CM,aAA1C;AACAA,EAAAA,aAAa,CAACC,IAAd,CAAmBH,mBAAnB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCM,aAAzC,EAzBsC,CA0BtC;AACA;AACA;AACA;AACA;;AAEA,QAAME,iBAAiB,GAAIF,aAAD,IAAmB;AACzCP,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEAH,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH,GAJD,CAhCsC,CAqCtC;;;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIS;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKV,kBAAkB,gBAAE,QAAC,kBAAD;AAAoB,MAAA,cAAc,EAAEU;AAApC;AAAA;AAAA;AAAA;AAAA,YAAF,gBAA0D,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,WAAW,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,YAHjF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA7CD;;GAAMvB,wB;UAeaH,W;;;KAfbG,wB;AA+CN,eAAeA,wBAAf","sourcesContent":["import React, { useState } from 'react';\nimport {useLocation} from 'react-router-dom';\nimport AnswerChoicesPanel from './answer-choices-panel';\nimport MainButton from './main-button';\n\n\n//Child of App (Router switch to /question)\nconst LargeSingleItemContainer = props => {\n\n    //Function to shuffle questions in categories and also answer choices per question\n    const shuffle = (lst) => {\n        for (let i= lst.length - 1; i>0; i --) {\n            const j = Math.floor(Math.random() * i);\n            const temp = lst[i];\n            lst[i] = lst[j];\n            lst[j] = temp;\n        };\n    };\n\n    const [showMultipleChoice, setShowMultipleChoice] = useState(false);\n    \n    //Pushed from GameBoardColumn\n    let location = useLocation();\n    console.log(\"quesOb\", location.questionObject);\n\n    //Add correct answer to list of answer choices\n    const IncorrectAnswerChoices = location.questionObject.incorrect_answers;\n    const CorrectAnswerChoice = location.questionObject.correct_answer;\n    let answerChoices = [];\n    answerChoices = IncorrectAnswerChoices;\n    console.log(\"answer choices before push\", answerChoices);\n    answerChoices.push(CorrectAnswerChoice);\n    console.log(\"answer choices after push\", answerChoices);\n    //console.log(\"item:\", item);\n    // console.log(\"ans pre shuf:\", answerChoices);\n    // shuffle(answerChoices);\n    //console.log(\"ans post shuf:\", answerChoices);\n    //}\n\n    const showAnswerChoices = (answerChoices) => {\n        console.log(\"howdy\");\n\n        setShowMultipleChoice(true);\n    }\n    // const {question} = useParams();\n    return (\n        <div>\n            <p>Hi</p>\n            <p>{answerChoices}</p>\n            {showMultipleChoice? <AnswerChoicesPanel questionObject={answerChoices} /> : <MainButton label=\"Answer\" handleClick={showAnswerChoices} />}\n        </div>\n    );\n}\n\nexport default LargeSingleItemContainer"]},"metadata":{},"sourceType":"module"}