{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/answer-choices-panel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MainButton from './main-button';\nimport { useHistory } from 'react-router-dom';\n\nconst AnswerChoicesPanel = props => {\n  _s();\n\n  const answers = props.answers;\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const history = useHistory();\n\n  const selectAnswer = answ => {\n    setSelectedAnswer(answ.target.id);\n    console.log(\"correct ans\", props.correctAnswer);\n    console.log(\"state:\", selectedAnswer);\n\n    if (selectedAnswer === props.correctAnswer) {\n      console.log(\"Bingo\"); //Increment Player score\n      //Go back to prior screen\n      //Reset timer\n    } else {\n      console.log(\"Wrong answer\"); //Decrement Player score\n    } // }\n\n\n    history.push(`/game-board`);\n  };\n\n  const answerButtons = answers.map(answer => /*#__PURE__*/_jsxDEV(MainButton, {\n    label: answer,\n    value: selectedAnswer,\n    handleClick: selectAnswer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: answerButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnswerChoicesPanel, \"Ns+uvwJvm5aZbUk3b1DgbDfDwhg=\", false, function () {\n  return [useHistory];\n});\n\n_c = AnswerChoicesPanel;\nexport default AnswerChoicesPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerChoicesPanel\");","map":{"version":3,"sources":["/Users/gloryleilaniwilliams/src/jeopardy-lite/src/components/answer-choices-panel.js"],"names":["React","useState","MainButton","useHistory","AnswerChoicesPanel","props","answers","selectedAnswer","setSelectedAnswer","history","selectAnswer","answ","target","id","console","log","correctAnswer","push","answerButtons","map","answer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAAA;;AAEhC,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD;AAEA,QAAMQ,OAAO,GAAGN,UAAU,EAA1B;;AAEA,QAAMO,YAAY,GAAIC,IAAD,IAAU;AAC3BH,IAAAA,iBAAiB,CAACG,IAAI,CAACC,MAAL,CAAYC,EAAb,CAAjB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BV,KAAK,CAACW,aAAjC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,cAAtB;;AAEA,QAAIA,cAAc,KAAKF,KAAK,CAACW,aAA7B,EAA4C;AACxCF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADwC,CAExC;AACA;AAEA;AACH,KAND,MAQK;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADC,CAED;AACH,KAjB0B,CAkB3B;;;AACAN,IAAAA,OAAO,CAACQ,IAAR,CAAc,aAAd;AACH,GApBD;;AAuBA,QAAMC,aAAa,GAAGZ,OAAO,CAACa,GAAR,CAAaC,MAAD,iBAC9B,QAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,MAAnB;AAA2B,IAAA,KAAK,EAAEb,cAAlC;AAAkD,IAAA,WAAW,EAAEG;AAA/D;AAAA;AAAA;AAAA;AAAA,UADkB,CAAtB;AAKA,sBACI;AAAA,2BACI;AAAA,gBAAIQ;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCD;;GAAMd,kB;UAKcD,U;;;KALdC,kB;AA0CN,eAAeA,kBAAf","sourcesContent":["import React, { useState } from 'react';\nimport MainButton from './main-button';\nimport { useHistory } from 'react-router-dom';\n\n\nconst AnswerChoicesPanel = props => {\n\n    const answers = props.answers;\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\n\n    const history = useHistory();\n\n    const selectAnswer = (answ) => {\n        setSelectedAnswer(answ.target.id);\n        \n        console.log(\"correct ans\", props.correctAnswer);\n        console.log(\"state:\", selectedAnswer);\n\n        if (selectedAnswer === props.correctAnswer) {\n            console.log(\"Bingo\");\n            //Increment Player score\n            //Go back to prior screen\n            \n            //Reset timer\n        }\n        \n        else {\n            console.log(\"Wrong answer\");\n            //Decrement Player score\n        }\n        // }\n        history.push(`/game-board`)\n    };\n    \n\n    const answerButtons = answers.map((answer) => (\n        <MainButton label={answer} value={selectedAnswer} handleClick={selectAnswer}/>\n    ));\n        \n    \n    return (\n        <div>\n            <p>{answerButtons}</p>\n        </div>\n    );\n}\n\nexport default AnswerChoicesPanel"]},"metadata":{},"sourceType":"module"}